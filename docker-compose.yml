services:
  # Django-бэкенд
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn locateme.wsgi:application --bind 0.0.0.0:8000 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - static_volume:/app/staticfiles
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000" 
    networks:
      app-network:
        aliases:
          - backend.local

  # PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: real_estate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: maur
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # React/Vite-фронтенд
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app  
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000  
    ports:
      - "5173:5173" 
    networks:
      app-network:
        aliases:
          - frontend.local


volumes:
  postgres_data: 
  static_volume:

networks:
  app-network:
    driver: bridge